

func fetchAllInvestors(completion: @escaping ([Investor]) -> (), withCancel cancel: ((Error) -> ())?) {
let ref = Database.database().reference().child("investors")

Analytics.logEvent("fetch_all_investors", parameters: [:])

ref.observeSingleEvent(of: .value, with: { (snapshot) in
guard let children = snapshot.children.allObjects as? [DataSnapshot] else {
completion([])
return
}

var newInvestors = [Investor]()
for child in children {
if var value = child.value as? [String : Any] {
if  value["name_search"] == nil { //let nameSearch = value["name_search"] as? [String] {
guard let first = value["first"] as? String, let last = value["last"] as? String else {
return //first and last name don't exist
}

value["name_search"] = "\(first.lowercased()) \(last.lowercased())"
Database.database().reference().child("investors").child(child.key).setValue(value)
}

//newInvestors.append(Investor(data: value))
}
}

Analytics.logEvent("fetch_all_investors_success", parameters: [:])

completion(newInvestors)
}) { (err) in
Analytics.logEvent("fetch_all_investors_error", parameters: ["description" : err.localizedDescription])

print("Failed to fetch investors:", err)
cancel?(err)
}
}
